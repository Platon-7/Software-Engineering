// Generated by view binder compiler. Do not edit!
package com.r4.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import com.r4.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityEditInfoBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button changePassword;

  @NonNull
  public final EditText editSkills;

  @NonNull
  public final EditText editTime;

  @NonNull
  public final Guideline guideline12;

  @NonNull
  public final EditText newPassword;

  @NonNull
  public final EditText oldPassword;

  @NonNull
  public final EditText repeatPassword;

  @NonNull
  public final Button updateSkills;

  @NonNull
  public final Button updateTime;

  private ActivityEditInfoBinding(@NonNull ConstraintLayout rootView,
      @NonNull Button changePassword, @NonNull EditText editSkills, @NonNull EditText editTime,
      @NonNull Guideline guideline12, @NonNull EditText newPassword, @NonNull EditText oldPassword,
      @NonNull EditText repeatPassword, @NonNull Button updateSkills, @NonNull Button updateTime) {
    this.rootView = rootView;
    this.changePassword = changePassword;
    this.editSkills = editSkills;
    this.editTime = editTime;
    this.guideline12 = guideline12;
    this.newPassword = newPassword;
    this.oldPassword = oldPassword;
    this.repeatPassword = repeatPassword;
    this.updateSkills = updateSkills;
    this.updateTime = updateTime;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityEditInfoBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityEditInfoBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_edit_info, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityEditInfoBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.change_password;
      Button changePassword = rootView.findViewById(id);
      if (changePassword == null) {
        break missingId;
      }

      id = R.id.edit_skills;
      EditText editSkills = rootView.findViewById(id);
      if (editSkills == null) {
        break missingId;
      }

      id = R.id.edit_time;
      EditText editTime = rootView.findViewById(id);
      if (editTime == null) {
        break missingId;
      }

      id = R.id.guideline12;
      Guideline guideline12 = rootView.findViewById(id);
      if (guideline12 == null) {
        break missingId;
      }

      id = R.id.new_password;
      EditText newPassword = rootView.findViewById(id);
      if (newPassword == null) {
        break missingId;
      }

      id = R.id.old_password;
      EditText oldPassword = rootView.findViewById(id);
      if (oldPassword == null) {
        break missingId;
      }

      id = R.id.repeat_password;
      EditText repeatPassword = rootView.findViewById(id);
      if (repeatPassword == null) {
        break missingId;
      }

      id = R.id.update_skills;
      Button updateSkills = rootView.findViewById(id);
      if (updateSkills == null) {
        break missingId;
      }

      id = R.id.update_time;
      Button updateTime = rootView.findViewById(id);
      if (updateTime == null) {
        break missingId;
      }

      return new ActivityEditInfoBinding((ConstraintLayout) rootView, changePassword, editSkills,
          editTime, guideline12, newPassword, oldPassword, repeatPassword, updateSkills,
          updateTime);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
