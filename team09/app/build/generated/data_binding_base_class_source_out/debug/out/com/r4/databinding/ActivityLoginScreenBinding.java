// Generated by view binder compiler. Do not edit!
package com.r4.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import com.r4.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivityLoginScreenBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final EditText AM;

  @NonNull
  public final Button Login;

  @NonNull
  public final EditText Password;

  @NonNull
  public final Button SignUp;

  @NonNull
  public final Guideline guideline2;

  @NonNull
  public final TextView textView2;

  private ActivityLoginScreenBinding(@NonNull ConstraintLayout rootView, @NonNull EditText AM,
      @NonNull Button Login, @NonNull EditText Password, @NonNull Button SignUp,
      @NonNull Guideline guideline2, @NonNull TextView textView2) {
    this.rootView = rootView;
    this.AM = AM;
    this.Login = Login;
    this.Password = Password;
    this.SignUp = SignUp;
    this.guideline2 = guideline2;
    this.textView2 = textView2;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivityLoginScreenBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityLoginScreenBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_login_screen, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityLoginScreenBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.AM;
      EditText AM = rootView.findViewById(id);
      if (AM == null) {
        break missingId;
      }

      id = R.id.Login;
      Button Login = rootView.findViewById(id);
      if (Login == null) {
        break missingId;
      }

      id = R.id.Password;
      EditText Password = rootView.findViewById(id);
      if (Password == null) {
        break missingId;
      }

      id = R.id.SignUp;
      Button SignUp = rootView.findViewById(id);
      if (SignUp == null) {
        break missingId;
      }

      id = R.id.guideline2;
      Guideline guideline2 = rootView.findViewById(id);
      if (guideline2 == null) {
        break missingId;
      }

      id = R.id.textView2;
      TextView textView2 = rootView.findViewById(id);
      if (textView2 == null) {
        break missingId;
      }

      return new ActivityLoginScreenBinding((ConstraintLayout) rootView, AM, Login, Password,
          SignUp, guideline2, textView2);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
