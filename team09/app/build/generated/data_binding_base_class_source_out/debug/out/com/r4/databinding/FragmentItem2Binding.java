// Generated by view binder compiler. Do not edit!
package com.r4.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.r4.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentItem2Binding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button acceptButton;

  @NonNull
  public final Button declineButton;

  @NonNull
  public final ConstraintLayout linearLayout2;

  @NonNull
  public final TextView skills;

  @NonNull
  public final TextView studentRating;

  @NonNull
  public final TextView timeline;

  private FragmentItem2Binding(@NonNull ConstraintLayout rootView, @NonNull Button acceptButton,
      @NonNull Button declineButton, @NonNull ConstraintLayout linearLayout2,
      @NonNull TextView skills, @NonNull TextView studentRating, @NonNull TextView timeline) {
    this.rootView = rootView;
    this.acceptButton = acceptButton;
    this.declineButton = declineButton;
    this.linearLayout2 = linearLayout2;
    this.skills = skills;
    this.studentRating = studentRating;
    this.timeline = timeline;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentItem2Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentItem2Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_item2, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentItem2Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.accept_button;
      Button acceptButton = rootView.findViewById(id);
      if (acceptButton == null) {
        break missingId;
      }

      id = R.id.decline_button;
      Button declineButton = rootView.findViewById(id);
      if (declineButton == null) {
        break missingId;
      }

      ConstraintLayout linearLayout2 = (ConstraintLayout) rootView;

      id = R.id.skills;
      TextView skills = rootView.findViewById(id);
      if (skills == null) {
        break missingId;
      }

      id = R.id.student_rating;
      TextView studentRating = rootView.findViewById(id);
      if (studentRating == null) {
        break missingId;
      }

      id = R.id.timeline;
      TextView timeline = rootView.findViewById(id);
      if (timeline == null) {
        break missingId;
      }

      return new FragmentItem2Binding((ConstraintLayout) rootView, acceptButton, declineButton,
          linearLayout2, skills, studentRating, timeline);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
