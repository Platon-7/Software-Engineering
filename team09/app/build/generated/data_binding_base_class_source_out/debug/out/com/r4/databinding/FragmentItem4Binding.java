// Generated by view binder compiler. Do not edit!
package com.r4.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.r4.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentItem4Binding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView content;

  @NonNull
  public final TextView email;

  @NonNull
  public final Button evaluate;

  @NonNull
  public final ConstraintLayout linearLayout4;

  @NonNull
  public final TextView name;

  @NonNull
  public final EditText rating;

  @NonNull
  public final TextView skillsOverview;

  @NonNull
  public final TextView surname;

  @NonNull
  public final TextView timelineOverview;

  private FragmentItem4Binding(@NonNull ConstraintLayout rootView, @NonNull TextView content,
      @NonNull TextView email, @NonNull Button evaluate, @NonNull ConstraintLayout linearLayout4,
      @NonNull TextView name, @NonNull EditText rating, @NonNull TextView skillsOverview,
      @NonNull TextView surname, @NonNull TextView timelineOverview) {
    this.rootView = rootView;
    this.content = content;
    this.email = email;
    this.evaluate = evaluate;
    this.linearLayout4 = linearLayout4;
    this.name = name;
    this.rating = rating;
    this.skillsOverview = skillsOverview;
    this.surname = surname;
    this.timelineOverview = timelineOverview;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentItem4Binding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentItem4Binding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_item4, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentItem4Binding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.content;
      TextView content = rootView.findViewById(id);
      if (content == null) {
        break missingId;
      }

      id = R.id.email;
      TextView email = rootView.findViewById(id);
      if (email == null) {
        break missingId;
      }

      id = R.id.evaluate;
      Button evaluate = rootView.findViewById(id);
      if (evaluate == null) {
        break missingId;
      }

      ConstraintLayout linearLayout4 = (ConstraintLayout) rootView;

      id = R.id.name;
      TextView name = rootView.findViewById(id);
      if (name == null) {
        break missingId;
      }

      id = R.id.rating;
      EditText rating = rootView.findViewById(id);
      if (rating == null) {
        break missingId;
      }

      id = R.id.skills_overview;
      TextView skillsOverview = rootView.findViewById(id);
      if (skillsOverview == null) {
        break missingId;
      }

      id = R.id.surname;
      TextView surname = rootView.findViewById(id);
      if (surname == null) {
        break missingId;
      }

      id = R.id.timeline_overview;
      TextView timelineOverview = rootView.findViewById(id);
      if (timelineOverview == null) {
        break missingId;
      }

      return new FragmentItem4Binding((ConstraintLayout) rootView, content, email, evaluate,
          linearLayout4, name, rating, skillsOverview, surname, timelineOverview);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
